service: music-api
frameworkVersion: '2'

custom:
  tableName: 'music-table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamManagedPolicies: 
    - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - s3:ListBucket
        - s3:GetObject
        - s3:ListObjects

      Resource:
        - { "Fn::GetAtt": ["MusicDynamoDBTable", "Arn" ] }
  environment:
    MUSIC_TABLE: ${self:custom.tableName}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-express

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'

  getGenre:
    handler: index.handler
    events:
      - http: 'GET /genres'

  getArtistByGenre:
    handler: index.handler
    events:
      - http: 'GET /artist/by/genre/{proxy+}'

  getAlbumByArtist:
    handler: index.handler
    events:
      - http: 'GET /albums/by/artist/{proxy+}'

  getSongByAlbum:
    handler: index.handler
    events:
      - http: 'GET /songs/by/album/{proxy+}'

  getSong:
    handler: index.handler
    events:
      - http: 'GET /song/{proxy+}'

  s3:
    handler: s3_handler.hello
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - 's3:ListBucket'
        Resource: "arn:aws:s3:::hw-bucket-name"

      - Effect: 'Allow'
        Action:
          - 's3:ListObjects'
        Resource: "arn:aws:s3:::hw-bucket-name"
    events:
      - httpApi:
          path: /s3
          method: get

resources:
  Resources:
    MusicDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "pk"
            AttributeType: "S"
          -
            AttributeName: "sk"
            AttributeType: "S"

        KeySchema:
          -
            AttributeName: "pk"
            KeyType: HASH
          -
            AttributeName: "sk"
            KeyType: RANGE
          

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

        TableName: ${self:custom.tableName} 
          


  # hello:
  #   handler: handler.api
  #   events:
  #    - httpApi:
  #        path: /ex
  #        method: get
  # heyo:
  #   runtime: python3.8
  #   handler: py_handler.heyo
  #   events:
  #    - httpApi:
  #        path: /heyo
  #        method: get
  # s3:
  #   handler: s3_handler.hello
  #   iamRoleStatements:
  #     - Effect: 'Allow'
  #       Action:
  #         - 's3:ListBucket'
  #       Resource: "arn:aws:s3:::hw-bucket-name"

  #     - Effect: 'Allow'
  #       Action:
  #         - 's3:ListObjects'
  #       Resource: "arn:aws:s3:::hw-bucket-name"
  #   events:
  #     - httpApi:
  #         path: /s3
  #         method: get